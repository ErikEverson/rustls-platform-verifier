[package]
name = "rustls-platform-verifier"
version = "0.1.0"
authors = ["ComplexSpaces <complexspacescode@gmail.com>", "1Password"]
description = "rustls-platform-verifier supports verifying TLS certificates in rustls with the operating system verifier"
keywords = ["tls", "certificate", "verification", "os", "native"]
repository = "https://github.com/rustls/rustls-platform-verifier"
license = "MIT OR Apache-2.0"
edition = "2021"
rust-version = "1.64.0"

[lib]
name = "rustls_platform_verifier"
# Note: The `cdylib` specification is for testing only. The shared library
# is not expected to have a stable API.
crate-type = ["cdylib", "rlib"]

[features]
# Enables a C interface to use for testing where `cargo` can't be used.
# This feature is not stable, nor is the interface exported when it is enabled.
# Do not rely on this or use it in production.
ffi-testing = ["android_logger"]
# Enables APIs that expose lower-level verifier types for debugging purposes.
dbg = []
# Enables `log::debug` base64-encoded logging of all end-entity certificates processed
# by the platform's verifier.
cert-logging = ["base64"]
# Used for nicely documenting the Android-specific APIs. This feature is not stable.
docsrs = ["jni", "once_cell"]

[dependencies]
rustls = { version = "0.21.10", features = ["dangerous_configuration", "tls12", "logging"] }
log = { version = "0.4" }
base64 = { version = "0.21", optional = true } # Only used when the `cert-logging` feature is enabled.
jni = { version = "0.19", default-features = false, optional = true } # Only used during doc generation
once_cell = { version = "1.9", optional = true } # Only used during doc generation.

[target.'cfg(all(unix, not(target_os = "android"), not(target_os = "macos"), not(any(target_os = "ios", target_os = "tvos"))))'.dependencies]
rustls-native-certs = "0.6"
once_cell = "1.9"
webpki = { package = "rustls-webpki", version = "0.101", features = ["alloc", "std"] }

[target.'cfg(target_os = "android")'.dependencies]
rustls-platform-verifier-android = { path = "../android-release-support", version = "0.1.0" }
jni = { version = "0.19", default-features = false }
webpki = { package = "rustls-webpki", version = "0.101", features = ["alloc", "std"] }
once_cell = "1.9"
android_logger = { version = "0.13", optional = true } # Only used during testing.

[target.'cfg(target_arch = "wasm32")'.dependencies]
once_cell = "1.9"
webpki-roots = "0.25"

# BSD targets require webpki-roots for the real-world verification tests.
[target.'cfg(target_os = "freebsd")'.dev-dependencies]
webpki-roots = "0.25"

[target.'cfg(any(target_os = "macos", target_os = "ios", target_os = "tvos"))'.dependencies]
core-foundation = "0.9"
core-foundation-sys = "0.8"
security-framework = { git = "https://github.com/kornelski/rust-security-framework.git", features = ["OSX_10_14"] }
security-framework-sys = { git = "https://github.com/kornelski/rust-security-framework.git", features = ["OSX_10_14"] }

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["wincrypt", "winerror"] }

[package.metadata.docs.rs]
rustdoc-args = ["--cfg", "docsrs"]
features = ["dbg", "docsrs"]
